{
	"info": {
		"_postman_id": "0e58292d-7cfc-4af8-b738-29608ab8543c",
		"name": "Backend-API-Cards-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get",
			"item": [
				{
					"name": "Backend-Cards-1.1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://localhost:3000/auth/login',\r",
									"    method: 'POST',\r",
									"    header: 'Content-Type:application/json',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({ \"username\": \"backendCardsTestUserName\" , \"password\": \"backendCardsTestUserPassword\" })\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    res = res.json();\r",
									"    const userId = res.user.id;\r",
									"    const token = res.access_token;\r",
									"    pm.environment.set(\"userId\", userId);\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Cards\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"for (var i = 0; i < jsonData.length; i++) {\r",
									"    pm.expect(jsonData[i].userId).to.eql(pm.environment.get(\"userId\"));\r",
									"}\r",
									"    pm.expect(jsonData.length).to.greaterThan(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/cards/getAllCards/{{userId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"getAllCards",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Backend-Cards-1.2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://localhost:3000/auth/login',\r",
									"    method: 'POST',\r",
									"    header: 'Content-Type:application/json',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({ \"username\": \"backendCardsTestUserName2\" , \"password\": \"backendCardsTestUserPassword2\" })\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    res = res.json();\r",
									"    const userId = res.user.id;\r",
									"    const token = res.access_token;\r",
									"    pm.environment.set(\"userId\", userId);\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check No Cards\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"for (var i = 0; i < jsonData.length; i++) {\r",
									"    pm.expect(jsonData).to.eql([]);\r",
									"}\r",
									"    pm.expect(jsonData.length).to.equal(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cards/getAllCards/{{userId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"getAllCards",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Backend-Cards-1.3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cards/getAllCards/777",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"getAllCards",
								"777"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Backend-Cards-2.1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://localhost:3000/auth/login',\r",
									"    method: 'POST',\r",
									"    header: 'Content-Type:application/json',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({ \"username\": \"backendCardsTestUserName4\" , \"password\": \"backendCardsTestUserPassword4\" })\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    res = res.json();\r",
									"    const userId = res.user.id;\r",
									"    const token = res.access_token;\r",
									"    pm.environment.set(\"userId\", userId);\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cards/deleteCard/1111/{{userId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"deleteCard",
								"1111",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Backend-Cards-2.2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://localhost:3000/auth/login',\r",
									"    method: 'POST',\r",
									"    header: 'Content-Type:application/json',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({ \"username\": \"backendCardsTestUserName5\" , \"password\": \"backendCardsTestUserPassword5\" })\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    res = res.json();\r",
									"    const userId = res.user.id;\r",
									"    const token = res.access_token;\r",
									"    pm.environment.set(\"userId\", userId);\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cards/deleteCard/2222/{{userId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"deleteCard",
								"2222",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Backend-Cards-2.3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cards/deleteCard/2222/444",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"deleteCard",
								"2222",
								"444"
							]
						}
					},
					"response": []
				},
				{
					"name": "Backend-Cards-2.4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://localhost:3000/auth/login',\r",
									"    method: 'POST',\r",
									"    header: 'Content-Type:application/json',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({ \"username\": \"backendCardsTestUserName7\" , \"password\": \"backendCardsTestUserPassword7\" })\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    res = res.json();\r",
									"    const userId = res.user.id;\r",
									"    const token = res.access_token;\r",
									"    pm.environment.set(\"userId\", userId);\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/cards/deleteCard/3333/333",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"deleteCard",
								"3333",
								"333"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Backend-Cards-3.1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://localhost:3000/auth/login',\r",
									"    method: 'POST',\r",
									"    header: 'Content-Type:application/json',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({ \"username\": \"backendCardsTestUserName9\" , \"password\": \"backendCardsTestUserPassword9\" })\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    res = res.json();\r",
									"    const userId = res.user.id;\r",
									"    const token = res.access_token;\r",
									"    pm.environment.set(\"userId\", userId);\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id\": 4444,\r\n\"text\": \"New Card Text\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/cards/updateCard",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"updateCard"
							]
						}
					},
					"response": []
				},
				{
					"name": "Backend-Cards-3.2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url: 'http://localhost:3000/auth/login',\r",
									"    method: 'POST',\r",
									"    header: 'Content-Type:application/json',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({ \"username\": \"backendCardsTestUserName10\" , \"password\": \"backendCardsTestUserPassword10\" })\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    res = res.json();\r",
									"    const userId = res.user.id;\r",
									"    const token = res.access_token;\r",
									"    pm.environment.set(\"userId\", userId);\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id\": 5555,\r\n\"text\": \"This card does not exist\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/cards/updateCard",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cards",
								"updateCard"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create",
			"item": []
		}
	]
}